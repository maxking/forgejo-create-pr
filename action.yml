---
name: "Create PR"
description: 'Commit and create PR'

inputs:
  base:
    description: 'Base branch to create PR against'
    required: true
    default: 'main'
  token:
    description: 'PAT for creating PR'
    required: true
  add-paths:
    description: 'Paths to add to commit'
    required: false
    default: '.'
  commit-message:
    description: 'Commit message'
    required: false
    default: 'Automated commit'
  pr-branch:
    description: 'Branch to create PR from'
    required: false
    default: 'automated-pr'
  pr-title:
    description: 'PR title'
    required: false
    default: 'Automated PR'
  pr-body:
    description: 'PR body'
    required: false
    default: 'Automated PR'
  pr-condition-cmd:
    description: 'Command to check if PR should be created'
    required: false
    default: git status --porcelain
  pr-assignee:
    description: 'Default assignee for the Pull rrequest'
    required: false
    default: null
  commit-user:
    description: 'Username to use for commit'
    required: false
    default: 'Forgejo Bot'
  commit-email:
    description: 'Email to use for commit'
    required: false
    default: 'forgejo@users.noreply.git'



runs:
  using: "composite"
  steps:
    - run: |
        git config --global user.name "${{ inputs.commit-user }}" >> $GITHUB_OUTPUT
        git config --global user.email "${{ inputs.commit-email }}" >> $GITHUB_OUTPUT
      shell: bash
      name: "Configure git"
    - name: "Pre-setup"
      run: |
        git fetch --all
        git checkout -b "${{ inputs.pr-branch }}"
      shell: bash
    - name: "Commit and create PR"
      shell: bash
      run: |
        if [[ -n "$(git status --porcelain)" ]]; then
          git add ${{ inputs.add-paths }}
          git commit -m "${{ inputs.commit-message }}"
          git push --force-with-lease origin "${{ inputs.pr-branch }}"
          curl -X 'POST' \
          'https://git.araj.me/api/v1/repos/maxking/dns-utils/pulls' \
          -H 'accept: application/json' \
          -H 'Authorization: token ${{ inputs.token }}' \
          -H 'Content-Type: application/json' \
          -d '{
          "assignee": "${{ inputs.asignee }}",
          "base": "${{ inputs.base }}",
          "body": "${{ inputs.pr-body }}",
          "head": "${{ inputs.pr-branch }}",
          "title": "${{ inputs.pr-title }}"
          }'
        else
          echo "No changes to commit"
        fi
branding:
  icon: 'check'
  color: 'blue'
